// for spock unit test
apply plugin: 'groovy'
dependencies {
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.spockframework:spock-spring')
    testCompile('cglib:cglib-nodep:2.2')       // For mocking classes
    testCompile('org.objenesis:objenesis:1.2') // For mocking final classes
}

// for code coverage
apply plugin: 'com.palantir.jacoco-coverage'
apply from: 'code_analyzer_test/test_coverage_config.gradle'

//config of coverage check, see document: https://github.com/palantir/gradle-jacoco-coverage
jacocoTestReport {
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'io/reactivesw/catalog/grpc/*',
                    'io/reactivesw/shoppingcart/grpc/*',
                    'io/reactivesw/shoppingcart/ShoppingCartServiceStarter*',
                    'io/reactivesw/shoppingcart/application/grpc/*',
                    'io/reactivesw/shoppingcart/domain/model/*',
                    'io/reactivesw/shoppingcart/infrastructure/*'
            ])
        })
    }
}

// config of coverage check
// see document: https://github.com/palantir/gradle-jacoco-coverage
jacocoCoverage {
    // Enforce minimum code coverage of 50% for every Java file.
    fileThreshold 0.8
}